<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="four_wheel_diff_bot">
  <!-- Main URDF file for Four Wheeled Differential Drive Robot -->

  <!-- Include general xacro files -->
  <xacro:include filename="common.xacro" />

  <!-- Include sensors -->
  <!-- <xacro:include filename="lidar.xacro" />
  <xacro:include filename="depth_camera.xacro" /> -->

  <!-- Extra sensors -->
  <!-- <xacro:include filename="camera.xacro"/> -->
  <!-- <xacro:include filename="3dlidar.xacro"/> -->

  <!-- Robot Variables -->
  <xacro:property name="chassis_length" value="0.35" />
  <xacro:property name="chassis_width" value="0.3" />
  <xacro:property name="chassis_height" value="0.08" />
  <xacro:property name="chassis_mass" value="4.0" />
  <xacro:property name="wheel_radius" value="0.05" />
  <xacro:property name="wheel_thickness" value="0.018" />
  <xacro:property name="wheel_mass" value="0.3" />
  <xacro:property name="wheel_offset_x" value="0.13" />
  <xacro:property name="wheel_offset_y" value="${chassis_width/2 + wheel_thickness/2}" />
  <xacro:property name="wheel_offset_z" value="0.0" />

  <!-- Base Link -->
  <link name="base_link"></link>

  <!-- Base Footprint -->
  <joint name="base_footprint_joint" type="fixed">
    <parent link="base_link" />
    <child link="base_footprint" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </joint>
  <link name="base_footprint"></link>

  <!-- Chassis -->
  <joint name="chassis_joint" type="fixed">
    <parent link="base_link" />
    <child link="chassis" />
    <origin xyz="0 0 0" />
  </joint>
  <link name="chassis">
    <visual>
      <origin xyz="0 0 ${chassis_height/2}" />
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <origin xyz="0 0 ${chassis_height/2}" />
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}" />
      </geometry>
    </collision>
    <xacro:inertial_box mass="0.5" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
      <origin xyz="0 0 ${chassis_height/2}" rpy="0 0 0" />
    </xacro:inertial_box>
  </link>

  <!-- Front Left Wheel -->
  <joint name="front_left_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="front_left_wheel" />
    <origin xyz="${wheel_offset_x} ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
    <axis xyz="0 0 1" />
  </joint>
  <link name="front_left_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}" />
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}"
      radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:inertial_cylinder>
  </link>

  <!-- Front Right Wheel -->
  <joint name="front_right_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="front_right_wheel" />
    <origin xyz="${wheel_offset_x} ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
    <axis xyz="0 0 -1" />
  </joint>
  <link name="front_right_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}" />
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}"
      radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:inertial_cylinder>
  </link>

  <!-- Rear Left Wheel -->
  <joint name="rear_left_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="rear_left_wheel" />
    <origin xyz="${-wheel_offset_x} ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
    <axis xyz="0 0 1" />
  </joint>
  <link name="rear_left_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}" />
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}"
      radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:inertial_cylinder>
  </link>

  <!-- Rear Right Wheel -->
  <joint name="rear_right_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="rear_right_wheel" />
    <origin xyz="${-wheel_offset_x} ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
    <axis xyz="0 0 -1" />
  </joint>
  <link name="rear_right_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}" />
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}"
      radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:inertial_cylinder>
  </link>

  <!-- Gazebo -->
  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="front_left_wheel">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="front_right_wheel">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="rear_left_wheel">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="rear_right_wheel">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo>
    <!-- Four Wheeled Differential Drive Robot -->
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <!-- Wheels -->
      <left_joint>rear_left_wheel_joint</left_joint>
      <left_joint>front_left_wheel_joint</left_joint>
      <right_joint>rear_right_wheel_joint</right_joint>
      <right_joint>front_right_wheel_joint</right_joint>
      <!-- Wheel params -->
      <wheel_radius>${wheel_radius}</wheel_radius>
      <wheel_separation>${wheel_offset_y*2}</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <wheel_separation>${wheel_offset_y*2}</wheel_separation>
      <!-- Limits -->
      <max_linear_acceleration>2.0</max_linear_acceleration>
      <!-- Frames -->
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>
      <!-- Output -->
      <tf_topic>/tf</tf_topic>
      <topic>cmd_vel</topic>
      <odom_topic>odom</odom_topic>
      <odom_publisher_frequency>30</odom_publisher_frequency>
    </plugin>

    <!-- Joint State Publisher -->
    <plugin filename="gz-sim-joint-state-publisher-system"
      name="gz::sim::systems::JointStatePublisher">
      <topic>joint_states</topic>
      <joint_name>front_left_wheel_joint</joint_name>
      <joint_name>front_right_wheel_joint</joint_name>
      <joint_name>rear_left_wheel_joint</joint_name>
      <joint_name>rear_right_wheel_joint</joint_name>
    </plugin>
  </gazebo>

</robot>